#include <iostream>
#include <string.h>
#include "conio.h"
#include <stdlib.h>
#include <Windows.h>
#include <time.h>
#include <ctime>

using namespace std;


void reverse(int a[], int asize, int b[], int bsize, int count)
{

	for (int i = 0; i < asize; i++)
	{
		b[count] = a[i];
		count--;
//		cout << "msg reversed" << endl;            //       <--------| нужно для отладки
	}
}
void  keylimit(int& a) 
{
	a = a % 1000;

	while (a < 111)
	{

		a = a % 1000;
	}
//	cout << "key OK" << endl;                         //       <--------| нужно для отладки
}


int main()
{	
	int answer;
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	srand(time(NULL));
	cout << endl << "   Выберите операцию:" << endl << "   1 - Зашифровать данные" << endl << "   2 - Расшифровать данные" << endl << "     Ваш ответ: ";
	cin >> answer;
	while ((answer != 2) && (answer != 1))
	{

		system("CLS");
		cout << endl << " тыкни верно, уеба " << endl << "   Выберите операцию:" << endl << "   1 - Зашифровать данные" << endl << "   2 - Расшифровать данные" << endl << "     Ваш ответ: ";
		cin >> answer;
	}
	if (answer == 1 ) {
		system("CLS");
		cout << "  Введите сообщение для шифровки: " << endl << "  ";
		cin.ignore();
		int const maxLengthmsg = 100000;
		char msg[maxLengthmsg];

		cin.getline(msg, 10000);				// ввод сообщения

		system("CLS");

		int count = 0;
		int Lengthmsg = 0;
		while (msg[count] != 0) {				 // считаем количество символов
			Lengthmsg++;
			count++;
		}

//		cout << "symbols poshitani..." << endl;              //       <--------| нужно для отладки

		int* msgcall = new int[Lengthmsg];
		for (int i = 0; i < Lengthmsg; i++)
		{
			msgcall[i] = msg[i];
//			cout << msgcall[i] << endl << endl;            // <-------------| Нужно было для отладки 

		}



		int keyEVEN = rand(); //создаем ключи на рамндоме
		keylimit(keyEVEN);
//		cout << "Key even done" << endl;						// <-------------| Нужно было для отладки 
		int keyODD = rand();
		keylimit(keyODD);
//		cout << "Key odd done" << endl;                         // <-------------| Нужно было для отладки 

		//шифование
		for (int i = 0; i < Lengthmsg; i++)
		{

			if (i % 2 == 0)
				msgcall[i] = msgcall[i] * keyEVEN;
			if (i % 2 != 0)
				msgcall[i] = msgcall[i] * keyODD;
//			cout << "kajdi even i odd is umnojen" << endl;         // <-------------| Нужно было для отладки 
		}



		//доп шифрование
		int posSum = keyEVEN % 10;
		int sumNumber = keyODD % 10;
		for (int i = 0; i < Lengthmsg; i++) {
			if (msgcall[i] % posSum == 0)
				msgcall[i] = msgcall[i] + 8;
		}

//		cout << "4eto eshe poshitano" << endl;                // <-------------| Нужно было для отладки 

		//разворот масива
		int* msgcallreverse = new int[Lengthmsg];
		int countreverse = Lengthmsg - 1;
		reverse(msgcall, Lengthmsg, msgcallreverse, Lengthmsg, countreverse);



		cout << endl << "     Ваш ключ для дешифровки:" << endl << endl;
		cout << Lengthmsg << keyEVEN << keyODD << endl << endl;
		

		cout << "     Ваше сообщение: " << endl << endl;
		//вывод
		for (int i = 0; i < Lengthmsg; i++)
		{
			cout << "  " << msgcallreverse[i] << endl;


		}

		cout << endl;

	}
	if (answer == 2)
	{
		system("CLS");
		cout << "  Введите ключ дешифрования: " << endl << "  ";
		int key;
		cin >> key;
		int Lengthmsg = key / 1000000;//получили длину масива
		system("CLS");
		cout << "  Введите зашифрованное сообщение: " << endl << "  ";
		int* msgcallreverse = new int[Lengthmsg];
		for (int i = 0; i < Lengthmsg; i++)
		{

			cin >> msgcallreverse[i];

		}//получили сообщение в развернутом виде

		system("CLS");

		int* msgcall = new int[Lengthmsg];
		int count = Lengthmsg - 1;
		reverse(msgcallreverse, Lengthmsg, msgcall, Lengthmsg, count); //развернули сообшение 


		int keyODD = key % 1000;
		key = key / 1000;
		int keyEVEN = key % 1000;


		int posSum = keyEVEN % 10;
		int sumNumber = keyODD % 10;
		for (int i = 0; i < Lengthmsg; i++)
		{
			if (msgcall[i] % posSum == 0)
				msgcall[i] = msgcall[i] - 8;
		}
		for (int i = 0; i < Lengthmsg; i++)
		{
			if (i % 2 == 0)
				msgcall[i] = msgcall[i] / keyEVEN;
			if (i % 2 != 0)
				msgcall[i] = msgcall[i] / keyODD;
		}

		char msg[10000];

		for (int i = 0; i < Lengthmsg; i++)
		{
			msg[i] = msgcall[i];


		}
		for (int i = 0; i < Lengthmsg; i++)
		{
			cout << " Ваше расшифрованное сообщение:" << endl << endl << "  " << msg[i];


		}
		cout << endl << endl << endl;
	}
	system("PAUSE");

}
